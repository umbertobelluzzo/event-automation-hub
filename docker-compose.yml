version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: uis_events
      POSTGRES_USER: uis_user
      POSTGRES_PASSWORD: supersecretpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uis_user -d uis_events"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend (Next.js)
  frontend:
    build:
      context: .        # ðŸ‘ˆ Focused context
      dockerfile: Dockerfile.dev
      target: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://uis_user:supersecretpassword@localhost:5432/uis_events
      - REDIS_URL=redis://redis:6379
      - BACKEND_URL=http://backend:4000  
      - AGENTS_URL=http://agents:8000
    volumes:
      - ./frontend:/app/frontend
      - ./shared:/app/shared
      - /app/frontend/node_modules
      - /app/frontend/.next
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: pnpm dev

  # Backend API (Express)
  backend:
    build:
      context: .      # ðŸ‘ˆ Focused context
      dockerfile: Dockerfile.dev
      target: backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://uis_user:supersecretpassword@localhost:5432/uis_events
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://frontend:3000
      - AGENTS_URL=http://agents:8000
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared
      - /app/backend/node_modules
      - /app/backend/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: pnpm dev

  # AI Agents (FastAPI + LangGraph)
  agents:
    build:
      context: .          # ðŸ‘ˆ Focused context
      dockerfile: Dockerfile.dev
      target: agents
    ports:
      - "8000:8000"
    environment:
      - PYTHON_ENV=development
      - DATABASE_URL=postgresql://uis_user:supersecretpassword@localhost:5432/uis_events
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://frontend:3000
      - BACKEND_URL=http://backend:4000
    volumes:
      - ./agents:/app/agents
      - ./shared:/app/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data: